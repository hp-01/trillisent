{"ast":null,"code":"var _jsxFileName = \"/home/manoj/trillisent/assessment-frontend/src/pages/student/AssessmentPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useAssessment } from '../../context/AssessmentContext';\nimport QuestionDisplay from '../../components/assessment/QuestionDisplay';\nimport NavigationButtons from '../../components/assessment/NavigationButtons';\nimport QuestionNavigator from '../../components/assessment/QuestionNavigator';\nimport Timer from '../../components/assessment/Timer';\nimport LoadingSpinner from '../../components/common/LoadingSpinner';\nimport ErrorMessage from '../../components/common/ErrorMessage';\nimport './AssessmentPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AssessmentPage() {\n  _s();\n  const {\n    questions,\n    currentQuestionIndex,\n    userAnswers,\n    questionStatus,\n    timer,\n    isLoading,\n    error,\n    selectAnswer,\n    nextQuestion,\n    prevQuestion,\n    jumpToQuestion,\n    submitAssessment,\n    isAssessmentSubmitted,\n    updateQuestionStatusToVisited // To mark current as visited\n  } = useAssessment();\n  useEffect(() => {\n    if (questions.length > 0 && questions[currentQuestionIndex]) {\n      const currentQId = questions[currentQuestionIndex]._id;\n      updateQuestionStatusToVisited(currentQId);\n    }\n  }, [currentQuestionIndex, questions, updateQuestionStatusToVisited]);\n  if (isLoading && questions.length === 0) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n    message: \"Loading questions...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 53\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    message: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 23\n  }, this);\n  if (isAssessmentSubmitted) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Assessment already submitted. Redirecting...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 39\n  }, this); // Or navigate\n  if (!questions || questions.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No questions available for this assessment.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 54\n  }, this);\n  const currentQuestion = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assessment-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"assessment-main-content\",\n      children: [/*#__PURE__*/_jsxDEV(QuestionDisplay, {\n        question: currentQuestion,\n        selectedOption: userAnswers[currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion._id],\n        onSelectOption: option => selectAnswer(currentQuestion._id, option)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NavigationButtons, {\n        onPrev: prevQuestion,\n        onNext: nextQuestion,\n        onSubmit: () => submitAssessment('completed'),\n        isFirst: currentQuestionIndex === 0,\n        isLast: currentQuestionIndex === questions.length - 1,\n        totalQuestions: questions.length,\n        currentQuestionNumber: currentQuestionIndex + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"assessment-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(Timer, {\n        initialTime: timer,\n        onTimeout: () => submitAssessment('timed-out'),\n        isSubmitted: isAssessmentSubmitted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(QuestionNavigator, {\n        questions: questions,\n        currentQuestionIndex: currentQuestionIndex,\n        questionStatus: questionStatus,\n        onJumpToQuestion: jumpToQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => submitAssessment('completed'),\n        className: \"submit-button-sidebar\",\n        children: \"Submit Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(AssessmentPage, \"oq2A1JUmE6ArAm/SSZKanuAAY+E=\", false, function () {\n  return [useAssessment];\n});\n_c = AssessmentPage;\nexport default AssessmentPage;\nvar _c;\n$RefreshReg$(_c, \"AssessmentPage\");","map":{"version":3,"names":["React","useEffect","useAssessment","QuestionDisplay","NavigationButtons","QuestionNavigator","Timer","LoadingSpinner","ErrorMessage","jsxDEV","_jsxDEV","AssessmentPage","_s","questions","currentQuestionIndex","userAnswers","questionStatus","timer","isLoading","error","selectAnswer","nextQuestion","prevQuestion","jumpToQuestion","submitAssessment","isAssessmentSubmitted","updateQuestionStatusToVisited","length","currentQId","_id","message","fileName","_jsxFileName","lineNumber","columnNumber","children","currentQuestion","className","question","selectedOption","onSelectOption","option","onPrev","onNext","onSubmit","isFirst","isLast","totalQuestions","currentQuestionNumber","initialTime","onTimeout","isSubmitted","onJumpToQuestion","onClick","_c","$RefreshReg$"],"sources":["/home/manoj/trillisent/assessment-frontend/src/pages/student/AssessmentPage.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useAssessment } from '../../context/AssessmentContext';\nimport QuestionDisplay from '../../components/assessment/QuestionDisplay';\nimport NavigationButtons from '../../components/assessment/NavigationButtons';\nimport QuestionNavigator from '../../components/assessment/QuestionNavigator';\nimport Timer from '../../components/assessment/Timer';\nimport LoadingSpinner from '../../components/common/LoadingSpinner';\nimport ErrorMessage from '../../components/common/ErrorMessage';\nimport './AssessmentPage.css';\n\nfunction AssessmentPage() {\n    const {\n        questions,\n        currentQuestionIndex,\n        userAnswers,\n        questionStatus,\n        timer,\n        isLoading,\n        error,\n        selectAnswer,\n        nextQuestion,\n        prevQuestion,\n        jumpToQuestion,\n        submitAssessment,\n        isAssessmentSubmitted,\n        updateQuestionStatusToVisited // To mark current as visited\n    } = useAssessment();\n\n    useEffect(() => {\n        if (questions.length > 0 && questions[currentQuestionIndex]) {\n            const currentQId = questions[currentQuestionIndex]._id;\n            updateQuestionStatusToVisited(currentQId);\n        }\n    }, [currentQuestionIndex, questions, updateQuestionStatusToVisited]);\n\n\n    if (isLoading && questions.length === 0) return <LoadingSpinner message=\"Loading questions...\" />;\n    if (error) return <ErrorMessage message={error} />;\n    if (isAssessmentSubmitted) return <p>Assessment already submitted. Redirecting...</p>; // Or navigate\n    if (!questions || questions.length === 0) return <p>No questions available for this assessment.</p>;\n\n    const currentQuestion = questions[currentQuestionIndex];\n\n    return (\n        <div className=\"assessment-page-container\">\n            <div className=\"assessment-main-content\">\n                <QuestionDisplay\n                    question={currentQuestion}\n                    selectedOption={userAnswers[currentQuestion?._id]}\n                    onSelectOption={(option) => selectAnswer(currentQuestion._id, option)}\n                />\n                <NavigationButtons\n                    onPrev={prevQuestion}\n                    onNext={nextQuestion}\n                    onSubmit={() => submitAssessment('completed')}\n                    isFirst={currentQuestionIndex === 0}\n                    isLast={currentQuestionIndex === questions.length - 1}\n                    totalQuestions={questions.length}\n                    currentQuestionNumber={currentQuestionIndex + 1}\n                />\n            </div>\n            <aside className=\"assessment-sidebar\">\n                <Timer initialTime={timer} onTimeout={() => submitAssessment('timed-out')} isSubmitted={isAssessmentSubmitted} />\n                <QuestionNavigator\n                    questions={questions}\n                    currentQuestionIndex={currentQuestionIndex}\n                    questionStatus={questionStatus}\n                    onJumpToQuestion={jumpToQuestion}\n                />\n                <button\n                    onClick={() => submitAssessment('completed')}\n                    className=\"submit-button-sidebar\"\n                >\n                    Submit Test\n                </button>\n            </aside>\n        </div>\n    );\n}\n\nexport default AssessmentPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}